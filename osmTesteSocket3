# Usuario escolhido: Usuario cadastrado
# Aplicação escolhida: OpenStreetMap implementado de forma local

# Por se tratar de uma aplicação web, o manual é bem semelhante a
# atividade de Teste de Sockets Parte 2

# ======= Script bash para testar a conectividade da aplicação =======

# testando se há conexão entre o cliente e o host do localWebServer

#!/bin/bash

# ip do cliente
ping -c 10 192.0.2.20

# ip do localhost
ping -c 10 192.0.3.10

# request http para o localhost
wget http://192.0.3.10:8080


# ======= Código do Cliente n1Client =======

# -*- coding: utf-8 -*-

# Script cliente HTTP para fazer requisições ao servidor web

import socket

def cliente():
    # Conecta ao servidor na porta 8080
    cliente_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    cliente_socket.connect(('192.0.3.10', 8080))

    # Faz a requisição GET
    cliente_socket.sendall("GET / HTTP/1.1\r\n\r\n")

    # Recebe a resposta do servidor
    resposta = cliente_socket.recv(4096)

    # Imprime a resposta na tela
    print("Resposta do servidor:")
    print(resposta)

    # Fecha a conexão
    cliente_socket.close()

if __name__ == "__main__":
    print("Para testar o servidor web, siga estes passos:")
    print("1. Execute o servidor Python 2 fornecido. O servidor esta configurado para executar ao iniciar o CORE, mas caso queira executar manualmente, abra o terminal do n4LocalWebServer e digite: python O_Localweb.py")
    print("2. Execute este script de cliente HTTP. Abra o terminal n1Client e digite: python O_Clienteweb.py")
    print("3. Verifique se a pagina retornada esta correta.")
    cliente()


# ======= Código do LocalHost web n4LocalWebServer =======

# -*- coding: utf-8 -*-

# Servidor web simples em Python 2
import socket

# Exemplo de conteudo da pagina web do OpenStreetMaps
pagina = """
HTTP/1.1 200 OK
Content-Type: text/html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OpenStreetMap Example</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    #map {
      height: 600px;
      width: 100%;
    }
  </style>
</head>
<body>
  <div id="map"></div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    // Cria um mapa Leaflet e define suas coordenadas iniciais e nível de zoom
    var map = L.map('map').setView([51.505, -0.09], 13);

    // Adiciona camada de mapeamento do OpenStreetMap ao mapa
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    // Adiciona um marcador ao mapa
    L.marker([51.5, -0.09]).addTo(map)
      .bindPopup('Aqui está um marcador do OpenStreetMap!')
      .openPopup();
  </script>
</body>
</html>

"""

def servidor():
    # Cria o socket do servidor
    servidor_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Associa o socket a porta 8080 e o IP
    servidor_socket.bind(('192.0.3.10', 8080))

    # Habilita o servidor a aceitar conexões
    servidor_socket.listen(1)

    print("Servidor pronto para receber conexoes...")

    while True:
        # Aceita a conexão do cliente
        conexao, endereco = servidor_socket.accept()
        print("Conexao recebida de:", endereco)

        # Envia a página para o cliente
        conexao.sendall(pagina)

        # Fecha a conexão
        conexao.close()

if __name__ == "__main__":
    servidor()
