# ======= Código do Cliente n1Client =======

# -*- coding: utf-8 -*-

# Script cliente HTTP para fazer requisições ao servidor web

import socket

def cliente():
    # Conecta ao servidor na porta 8080
    cliente_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    cliente_socket.connect(('203.0.113.200', 8080))

    # Faz a requisição GET
    cliente_socket.sendall("GET / HTTP/1.1\r\n\r\n")

    # Recebe a resposta do servidor
    resposta = cliente_socket.recv(4096)

    # Imprime a resposta na tela
    print("Resposta do servidor:")
    print(resposta)

    # Fecha a conexão
    cliente_socket.close()

if __name__ == "__main__":
    print("Para testar o servidor web da Empresa Exemplo, siga estes passos:")
    print("1. Execute o servidor Python 2 fornecido. O servidor esta configurado para executar ao iniciar o CORE, mas caso queira executar manualmente, abra o terminal do n9WWWExemplo e digite: python O_Hostweb.py")
    print("2. Execute este script de cliente HTTP. Abra o terminal n1Client e digite: python O_Clienteweb.py")
    print("3. Verifique se a pagina retornada esta correta.")
    cliente()


# ======= Código do Host web n9WWWExemplo =======

# -*- coding: utf-8 -*-

# Servidor web simples em Python 2
import socket

# Conteudo da página web
pagina = """
HTTP/1.1 200 OK
Content-Type: text/html

<html>
<head><title>Empresa Exemplo</title></head>
<body>
<h1>Bem-vindo à Empresa Exemplo</h1>
<p>Aqui está uma página simples da nossa empresa.</p>
</body>
</html>
"""

def servidor():
    # Cria o socket do servidor
    servidor_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    # Associa o socket a porta 8080
    servidor_socket.bind(('203.0.113.200', 8080))

    # Habilita o servidor a aceitar conexões
    servidor_socket.listen(1)

    print("Servidor pronto para receber conexoes...")

    while True:
        # Aceita a conexão do cliente
        conexao, endereco = servidor_socket.accept()
        print("Conexao recebida de:", endereco)

        # Envia a página para o cliente
        conexao.sendall(pagina)

        # Fecha a conexão
        conexao.close()

if __name__ == "__main__":
    servidor()
